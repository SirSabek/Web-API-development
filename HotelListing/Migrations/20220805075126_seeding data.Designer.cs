// <auto-generated />
using HotelListing.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListing.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220805075126_seeding data")]
    partial class seedingdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelListing.data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Egypt",
                            ShortName = "Egy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Morocco",
                            ShortName = "Mor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Algeria",
                            ShortName = "Alg"
                        });
                });

            modelBuilder.Entity("HotelListing.data.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            CountryId = 1,
                            Name = "grand Hotel",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 2,
                            Address = "Casablanca",
                            CountryId = 2,
                            Name = "sun shine",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "Algeria",
                            CountryId = 3,
                            Name = "Sheraton",
                            Rating = 4.0
                        });
                });

            modelBuilder.Entity("HotelListing.data.Hotel", b =>
                {
                    b.HasOne("HotelListing.data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
